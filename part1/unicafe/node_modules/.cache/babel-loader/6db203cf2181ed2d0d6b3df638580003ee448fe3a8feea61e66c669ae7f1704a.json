{"ast":null,"code":"var _jsxFileName = \"P:\\\\CARRERA\\\\FullStackOpenCourse\\\\part1\\\\unicafe\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Statistics = props => {\n  if (props.all == 0 && props.value == 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (props.all == 0) return;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: props.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let all = good + bad + neutral;\n  let average = (good - bad) / all;\n  let positive = good / all;\n  const setToValue = (value, set) => () => {\n    return set(value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setToValue(good + 1, setGood),\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setToValue(neutral + 1, setNeutral),\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setToValue(bad + 1, setBad),\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      text: \"good\",\n      value: good,\n      all: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      text: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      text: \"average\",\n      value: `${average}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      text: \"positive\",\n      value: `${positive}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c2 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","Statistics","props","all","value","text","App","good","setGood","neutral","setNeutral","bad","setBad","average","positive","setToValue","set","render","document","getElementById"],"sources":["P:/CARRERA/FullStackOpenCourse/part1/unicafe/src/index.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst Statistics = (props) => {\r\n  if (props.all == 0 && props.value == 0) {\r\n    return (\r\n      <>\r\n        <h1>No feedback given</h1>\r\n      </>\r\n    )\r\n  } else if (props.all== 0) return\r\n  return (\r\n    <>\r\n      <table>\r\n        <tbody>\r\n          <tr><td>{props.text}</td>\r\n            <td>{props.value}</td></tr>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  // save clicks of each button to its own state\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n  let all = good + bad + neutral\r\n  let average=(good - bad) /all\r\n  let positive=(good /all)\r\n  const setToValue = (value, set) => () => {\r\n    return (set(value))\r\n  }\r\n  return (\r\n    <>\r\n      <h1>give feedback</h1>\r\n      <button onClick={setToValue(good + 1, setGood)}>good</button>\r\n      <button onClick={setToValue(neutral + 1, setNeutral)}>neutral</button>\r\n      <button onClick={setToValue(bad + 1, setBad)}>bad</button>\r\n      <h1>statistics</h1>\r\n      <Statistics text=\"good\" value={good} all={all} />\r\n      <Statistics text=\"neutral\" value={neutral} />\r\n      <Statistics text=\"bad\" value={bad} />\r\n      <Statistics text=\"all\" value={all} />\r\n      <Statistics text=\"average\" value={`${average}`} />\r\n      <Statistics text=\"positive\" value={`${positive}%`} />\r\n    </>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root')\r\n)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAAA;AAAA;AAEhC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,IAAIA,KAAK,CAACC,GAAG,IAAI,CAAC,IAAID,KAAK,CAACE,KAAK,IAAI,CAAC,EAAE;IACtC,oBACE;MAAA,uBACE;QAAA,UAAI;MAAiB;QAAA;QAAA;QAAA;MAAA;IAAK,iBACzB;EAEP,CAAC,MAAM,IAAIF,KAAK,CAACC,GAAG,IAAG,CAAC,EAAE;EAC1B,oBACE;IAAA,uBACE;MAAA,uBACE;QAAA,uBACE;UAAA,wBAAI;YAAA,UAAKD,KAAK,CAACG;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM,eACvB;YAAA,UAAKH,KAAK,CAACE;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA;IACvB;MAAA;MAAA;MAAA;IAAA;EACF,iBACP;AAEP,CAAC;AAAA,KAlBKH,UAAU;AAoBhB,MAAMK,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjC,IAAII,GAAG,GAAGI,IAAI,GAAGI,GAAG,GAAGF,OAAO;EAC9B,IAAII,OAAO,GAAC,CAACN,IAAI,GAAGI,GAAG,IAAGR,GAAG;EAC7B,IAAIW,QAAQ,GAAEP,IAAI,GAAEJ,GAAI;EACxB,MAAMY,UAAU,GAAG,CAACX,KAAK,EAAEY,GAAG,KAAK,MAAM;IACvC,OAAQA,GAAG,CAACZ,KAAK,CAAC;EACpB,CAAC;EACD,oBACE;IAAA,wBACE;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB;MAAQ,OAAO,EAAEW,UAAU,CAACR,IAAI,GAAG,CAAC,EAAEC,OAAO,CAAE;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7D;MAAQ,OAAO,EAAEO,UAAU,CAACN,OAAO,GAAG,CAAC,EAAEC,UAAU,CAAE;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS,eACtE;MAAQ,OAAO,EAAEK,UAAU,CAACJ,GAAG,GAAG,CAAC,EAAEC,MAAM,CAAE;MAAA,UAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS,eAC1D;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eACnB,QAAC,UAAU;MAAC,IAAI,EAAC,MAAM;MAAC,KAAK,EAAEL,IAAK;MAAC,GAAG,EAAEJ;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eACjD,QAAC,UAAU;MAAC,IAAI,EAAC,SAAS;MAAC,KAAK,EAAEM;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7C,QAAC,UAAU;MAAC,IAAI,EAAC,KAAK;MAAC,KAAK,EAAEE;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eACrC,QAAC,UAAU;MAAC,IAAI,EAAC,KAAK;MAAC,KAAK,EAAER;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eACrC,QAAC,UAAU;MAAC,IAAI,EAAC,SAAS;MAAC,KAAK,EAAG,GAAEU,OAAQ;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAClD,QAAC,UAAU;MAAC,IAAI,EAAC,UAAU;MAAC,KAAK,EAAG,GAAEC,QAAS;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACpD;AAEP,CAAC;AAAA,GA1BKR,GAAG;AAAA,MAAHA,GAAG;AA4BTN,QAAQ,CAACiB,MAAM,eAAC,QAAC,GAAG;EAAA;EAAA;EAAA;AAAA,QAAG,EACrBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAChC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}