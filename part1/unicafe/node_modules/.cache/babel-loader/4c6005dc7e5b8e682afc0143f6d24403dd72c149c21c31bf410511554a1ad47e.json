{"ast":null,"code":"var _jsxFileName = \"P:\\\\CARRERA\\\\FullStackOpenCourse\\\\part1\\\\unicafe\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Statistics = _ref => {\n  let {\n    good,\n    neutral,\n    bad,\n    all\n  } = _ref;\n  /*#__PURE__*/_jsxDEV(Statistics, {\n    props: {\n      good,\n      neutral,\n      bad,\n      all\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n  debugger;\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"good\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"neutral\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"bad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: all\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"average\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: (good - bad) / all\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"positive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [good / all, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let all = 0;\n  const setToValue = (value, set) => () => set(value);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setToValue(good + 1, setGood),\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setToValue(neutral + 1, setNeutral),\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setToValue(bad + 1, setBad),\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      props: {\n        good,\n        neutral,\n        bad,\n        all\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c2 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","Statistics","good","neutral","bad","all","App","setGood","setNeutral","setBad","setToValue","value","set","render","document","getElementById"],"sources":["P:/CARRERA/FullStackOpenCourse/part1/unicafe/src/index.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst Statistics = ({ good, neutral, bad, all }) => {\r\n\r\n  <Statistics props={({ good, neutral, bad, all })} />\r\n  debugger\r\n  if(all===0){\r\n    return (\r\n      <>\r\n      <h1>No feedback given</h1>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <table>\r\n        <tbody>\r\n          <tr><td>good</td>\r\n            <td>{good}</td></tr>\r\n          <tr><td>neutral</td>\r\n            <td>{neutral}</td></tr>\r\n          <tr><td>bad</td>\r\n            <td>{bad}</td></tr>\r\n          <tr><td>all</td>\r\n            <td>{all}</td></tr>\r\n          <tr><td>average</td>\r\n            <td>{(good - bad) / all}</td>\r\n          </tr>\r\n          <tr><td>positive</td>\r\n            <td>{good / all}%</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\nconst App = () => {\r\n  // save clicks of each button to its own state\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n  let all = 0\r\n  const setToValue = (value, set) => () => (set(value))\r\n  return (\r\n    <>\r\n      <h1>give feedback</h1>\r\n      <button onClick={setToValue(good + 1, setGood)}>good</button>\r\n      <button onClick={setToValue(neutral + 1, setNeutral)}>neutral</button>\r\n      <button onClick={setToValue(bad + 1, setBad)}>bad</button>\r\n      <h1>statistics</h1>\r\n      <Statistics props={({ good, neutral, bad, all })} />\r\n    </>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root')\r\n)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}