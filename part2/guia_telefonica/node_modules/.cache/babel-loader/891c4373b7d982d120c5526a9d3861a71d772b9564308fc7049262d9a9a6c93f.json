{"ast":null,"code":"var _jsxFileName = \"P:\\\\CARRERA\\\\FullStackOpenCourse\\\\part2\\\\guia_telefonica\\\\src\\\\components\\\\Agenda.js\";\nimport FilterbyName from \"./FilterbyName\";\nimport personsService from '../services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Agenda = _ref => {\n  let {\n    agenda,\n    filter\n  } = _ref;\n  const borrarPerson = person => () => {\n    console.log(person);\n    if (window.confirm(`Seguro que quieres eliminar a ${person.name}`)) personsService.borrar({\n      person\n    }).then(borrada => {\n      console.log(borrada);\n      return agenda.filter(person => person.id = !borrada.id);\n    });\n  };\n  if (filter.localeCompare('') != 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FilterbyName, {\n        agenda: agenda,\n        filter: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: agenda.map(nombre => /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [\" \", nombre.name, \" \", nombre.number, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: borrarPerson(nombre),\n        children: \"borrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, nombre.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 32\n    }, this))\n  }, void 0, false);\n};\n_c = Agenda;\nexport default Agenda;\nvar _c;\n$RefreshReg$(_c, \"Agenda\");","map":{"version":3,"names":["FilterbyName","personsService","Agenda","agenda","filter","borrarPerson","person","console","log","window","confirm","name","borrar","then","borrada","id","localeCompare","map","nombre","number"],"sources":["P:/CARRERA/FullStackOpenCourse/part2/guia_telefonica/src/components/Agenda.js"],"sourcesContent":["import FilterbyName from \"./FilterbyName\"\r\nimport personsService from '../services/persons'\r\nconst Agenda = ({ agenda, filter }) => {\r\n    const borrarPerson = (person) => () => {\r\n        console.log(person)\r\n        if (window.confirm(`Seguro que quieres eliminar a ${person.name}`))\r\n            personsService.borrar({person}).then(borrada => {\r\n                console.log(borrada)\r\n                return agenda.filter(person => person.id = !borrada.id)\r\n            })\r\n    }\r\n    if (filter.localeCompare('') != 0) {\r\n        return (<>\r\n            <FilterbyName agenda={agenda} filter={filter} />\r\n        </>)\r\n    }\r\n    return (<>\r\n        {agenda.map(nombre => (<pre key={nombre.name}> {nombre.name} {nombre.number}\r\n            <button onClick={borrarPerson(nombre)}>borrar</button></pre>))}\r\n    </>)\r\n}\r\nexport default Agenda"],"mappings":";AAAA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,qBAAqB;AAAA;AAAA;AAChD,MAAMC,MAAM,GAAG,QAAwB;EAAA,IAAvB;IAAEC,MAAM;IAAEC;EAAO,CAAC;EAC9B,MAAMC,YAAY,GAAIC,MAAM,IAAK,MAAM;IACnCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,IAAIG,MAAM,CAACC,OAAO,CAAE,iCAAgCJ,MAAM,CAACK,IAAK,EAAC,CAAC,EAC9DV,cAAc,CAACW,MAAM,CAAC;MAACN;IAAM,CAAC,CAAC,CAACO,IAAI,CAACC,OAAO,IAAI;MAC5CP,OAAO,CAACC,GAAG,CAACM,OAAO,CAAC;MACpB,OAAOX,MAAM,CAACC,MAAM,CAACE,MAAM,IAAIA,MAAM,CAACS,EAAE,GAAG,CAACD,OAAO,CAACC,EAAE,CAAC;IAC3D,CAAC,CAAC;EACV,CAAC;EACD,IAAIX,MAAM,CAACY,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IAC/B,oBAAQ;MAAA,uBACJ,QAAC,YAAY;QAAC,MAAM,EAAEb,MAAO;QAAC,MAAM,EAAEC;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG,iBACjD;EACP;EACA,oBAAQ;IAAA,UACHD,MAAM,CAACc,GAAG,CAACC,MAAM,iBAAK;MAAA,WAAuB,GAAC,EAACA,MAAM,CAACP,IAAI,EAAC,GAAC,EAACO,MAAM,CAACC,MAAM,eACvE;QAAQ,OAAO,EAAEd,YAAY,CAACa,MAAM,CAAE;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,GADzBA,MAAM,CAACP,IAAI;MAAA;MAAA;MAAA;IAAA,QACqB;EAAC,iBACnE;AACP,CAAC;AAAA,KAlBKT,MAAM;AAmBZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}